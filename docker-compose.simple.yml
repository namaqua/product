version: '3.8'

name: pim-simple

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pim-simple-postgres
    restart: always
    environment:
      POSTGRES_USER: pim_user
      POSTGRES_PASSWORD: demo_password_2024
      POSTGRES_DB: pim_demo
    volumes:
      - postgres_simple_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pim_user -d pim_demo"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - pim-simple-network

  # Backend - Run directly with Node, no build
  backend:
    image: node:20-alpine
    container_name: pim-simple-backend
    working_dir: /app
    restart: always
    environment:
      NODE_ENV: development
      PORT: 3010
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: pim_demo
      DATABASE_USER: pim_user
      DATABASE_PASSWORD: demo_password_2024
      JWT_SECRET: demo_jwt_secret_for_testing_only_2024
      CORS_ORIGIN: "*"
    ports:
      - "3010:3010"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./engines:/app
      - engines_node_modules:/app/node_modules
      - ./uploads:/app/uploads
    command: sh -c "npm install && npm run start:dev"
    networks:
      - pim-simple-network

  # Frontend - Run directly with Node, no build
  frontend:
    image: node:20-alpine
    container_name: pim-simple-frontend
    working_dir: /app
    restart: always
    environment:
      VITE_API_URL: http://localhost:3010
    ports:
      - "80:5173"
    depends_on:
      - backend
    volumes:
      - ./admin:/app
      - admin_node_modules:/app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    networks:
      - pim-simple-network

volumes:
  postgres_simple_data:
  engines_node_modules:
  admin_node_modules:

networks:
  pim-simple-network:
    driver: bridge
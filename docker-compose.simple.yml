version: '3.8'

services:
  # PostgreSQL with explicit network settings
  postgres:
    image: postgres:15-alpine
    container_name: postgres-simple
    environment:
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: product_db
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    network_mode: bridge
    restart: unless-stopped

  # Redis 
  redis:
    image: redis:7-alpine
    container_name: redis-simple
    ports:
      - "6379:6379"
    network_mode: bridge
    restart: unless-stopped

  # API using host network to access other containers
  api:
    build:
      context: ./engines
      dockerfile: Dockerfile.production
    container_name: api-simple
    environment:
      NODE_ENV: production
      PORT: 3010
      DB_HOST: host.docker.internal
      DB_PORT: 5433
      DB_NAME: product_db
      DB_USER: product_user
      DB_PASSWORD: password123
      REDIS_HOST: host.docker.internal
      REDIS_PORT: 6379
      JWT_SECRET: my-jwt-secret
      JWT_REFRESH_SECRET: my-refresh-secret
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
    network_mode: host
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./admin
      dockerfile: Dockerfile.production
      args:
        VITE_API_URL: http://localhost:3010/api
    container_name: frontend-simple
    ports:
      - "3000:80"
    network_mode: bridge
    depends_on:
      - api
    restart: unless-stopped
